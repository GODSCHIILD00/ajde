<?php /* @var $this Ajde_Template_Parser_Phtml_Helper */
$this->requireJs('crud/field/timespan', 'html', MODULE_DIR . '_core/', $position = Ajde_Document_Format_Html::RESOURCE_POSITION_LAST);

/* @var $options Ajde_Crud_Options */
$options = $this->options;

$options
	->selectFields()
		->selectField('status')
			->setLabel('Status')
			->setFunction('displayStatus')
			->up()
		->selectField('due')
			->setLabel('Due')
			->setFunction('displayDue')
			->up()
		->selectField('time_spent')
			->setLabel('Spent')
			->setFunction('displayTimeSpent')
			->up()
		->selectField('total_time')
			->setLabel('Total')
			->setFunction('displayTotalTime')
			->up()
		->selectField('remaining')
			->setLabel('Remaining')
			->setFunction('displayRemaining')
			->up()
		->selectField('children')
			->addTableField('nodetype')			
			->addMetaField(NodeModel::META_TOTALTIME, 'displayTotalTime')
			->addSortField('sort')
			->up()
		->up()			
	->selectList()
		->setShow(array('title', 'status', 'due', 'remaining', 'sort'))
		->setRowClassFunction('rowClass')
		->selectButtons()
			->setNew(true)
			->setEdit(true)
			->setDelete(true)
			->setSelect(true)
			->addItemButton('new-issue', '<i class="icon-asterisk icon-white"></i> issue', 'new-issue btn-info', true)
			->addItemButton('timer', '<i class="icon-time icon-white"></i> work', 'btn-inverse work', true)
			->addToolbarHtml('issue_status', $this->includeModule('issue/statusBtn'))
			
->finished();

$crud = $this->ACCrudList('node', $options);
$crud->setSessionName('issue');
$crud->setNewAction('issue?view[filter][nodetype]=' . NodeModel::NODETYPE_ISSUE . '&prefill[parent]=' . $this->parent);

$filterGroup = new Ajde_Filter_WhereGroup();
$filters = array(
	NodeModel::NODETYPE_CLIENT,
	NodeModel::NODETYPE_PROJECT,
	NodeModel::NODETYPE_STREAK,
	NodeModel::NODETYPE_ISSUE,
	NodeModel::NODETYPE_NOTE,
	NodeModel::NODETYPE_SUBSCRIPTION
);
foreach ($filters as $filter) {
	$filterGroup->addFilter(new Ajde_Filter_Where('nodetype', Ajde_Filter_Where::FILTER_EQUALS, $filter, Ajde_Query::OP_OR));
}
$crud->getCollection()->addFilter($filterGroup);

if (!Ajde::app()->getRequest()->has('edit') && !Ajde::app()->getRequest()->has('new')) {
	// LIST 
	$collection = $crud->getCollection();
	/* @var $collection NodeCollection */
	$model = $crud->getModel();
	/* @var $model NodeModel */
	
	// remove mainfilter
	$crudView = $crud->getCollectionView();
	$crudView->setFilter(array());
	
	// add parent filter
	$collection->filterChildrenOfParent($this->parent);
	
	// join meta
	$collection->joinMeta();
	$collection->getQuery()->addGroupBy('node_meta.node');
	
	// add issue status
	$issuestatusId = $model->lookupMetaName('issue_status');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $issuestatusId AND node_meta.node = node.id) AS status"
	));
	
	// add issue due
	$issuedueId = $model->lookupMetaName('issue_due');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $issuedueId AND node_meta.node = node.id) AS due"
	));		
	
	// add streak status
	$streakstatusId = $model->lookupMetaName('streak_status');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $streakstatusId AND node_meta.node = node.id) AS streak_status"
	));
	
	// add time spent
	$timespentId = $model->lookupMetaName('time_spent');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $timespentId AND node_meta.node = node.id) AS time_spent"
	));
	
	// add total time
	$totaltimeId = $model->lookupMetaName('total_time');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $totaltimeId AND node_meta.node = node.id) AS total_time"
	));
	
	// add allocated
	$allocatedId = $model->lookupMetaName('time_allocated');
	$collection->getQuery()->addSelect(new Ajde_Db_Function(
		"(SELECT node_meta.value FROM node_meta WHERE node_meta.meta = $allocatedId AND node_meta.node = node.id) AS time_allocated"
	));
	
	// add node type
	$collection->joinNodetype();
	$collection->getQuery()->addSelect('nodetype.name AS nodetype_name');
	
}



?>

<div class="row-fluid">
	<div class="span12 expandInIframe">
		
		<div class="page-header">
			<h1>
				<?php echo Ajde::app()->getDocument()->getTitle(); ?>
				<?php if (Ajde::app()->getRequest()->has('edit') || Ajde::app()->getRequest()->has('new')) {
					echo $this->ACCrudMainFilterBadge($crud, true);
				} ?>
			</h1>
		</div>		
		
		<?php echo $crud->output(); ?>
		
	</div><!--/span-->
</div><!--/row-->

<!-- Quick issue modal -->
<div
	id="quickissue"
	class="modal hide fade"
	tabindex="-1"
	role="dialog"
	aria-labelledby="quickissue"
	aria-hidden="true"
>
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
		<h3 id="myModalLabel">New issue</h3>
	</div>
	<?php echo $this->ACAjaxForm('issue/quick', null, 'form-horizontal'); ?>
	<input type='hidden' name='parent' />
		<div class="modal-body">
			<div class="control-group">
				<label class="control-label" for="quickissue_title">Title</label>
				<div class="controls">
					<input type='text' name='title' id="quickissue_title" required="required" />
				</div>
			</div>
			<div class="control-group">
				<label class="control-label" for="quickissue_due">Time due</label>
				<div class="controls">
					<input type="date" name="due" id="quickissue_due" required="required" />
				</div>
			</div>
			<div class="control-group">
				<label class="control-label" for="quickissue_span">Time allocated</label>
				<div class="controls">
					<input type="hidden" name='allocated' id="quickissue_allocated" value="">
					<input type="text" id="quickissue_span" class="timespan" required="required" >
				</div>
			</div>
		</div>
		<div class="modal-footer">
			<button class="btn btn-success save">save</button>
			<button class="btn" data-dismiss="modal" aria-hidden="true">cancel</button>
		</div>
	</form>
</div>